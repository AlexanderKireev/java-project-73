plugins {
  id 'org.springframework.boot' version '2.5.5'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'application'
  id 'checkstyle'
  id 'jacoco'
  id 'com.adarshr.test-logger' version '3.0.0'
  id 'org.liquibase.gradle' version '2.0.4'

  //swagger plugins
  id "org.springdoc.openapi-gradle-plugin" version "1.3.3"
  id 'com.github.johnrengelman.processes' version '0.5.0'

  id 'org.siouan.frontend-jdk11' version '6.0.0'


}


group = 'hexlet.code'
version = '1.0-SNAPSHOT'

application {
  mainClass = 'hexlet.code.AppApplication'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  implementation 'org.liquibase:liquibase-core'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  runtimeOnly 'com.h2database:h2:1.4.200'
  runtimeOnly 'org.postgresql:postgresql:42.2.24'

//  implementation 'org.springframework.security:spring-security-core:6.0.2'

  implementation 'org.springframework.boot:spring-boot-starter-security'


  implementation "org.springframework.security:spring-security-config"


  implementation 'io.jsonwebtoken:jjwt:0.9.1'
  implementation 'com.rollbar:rollbar-spring-boot-webmvc:1.8.1'

  //swagger plugin
  implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'


  // predicates
  implementation 'com.querydsl:querydsl-core:5.0.0'
  implementation 'com.querydsl:querydsl-jpa:5.0.0'
  annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'

  annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
  annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'



//  implementation 'javax.validation:validation-api:2.0.1.Final'

  implementation 'org.springframework.boot:spring-boot-starter-validation'

  // Подключаем зависимости, необходимые для работы плагина
  liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
  liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
  liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
  liquibaseRuntime sourceSets.main.output
}


jacocoTestReport {
  reports {
    xml.required = true
  }
}

checkstyle {
  toolVersion '10.0'
}


test {
  useJUnitPlatform()
}

testlogger {
  showStandardStreams = true
}

diffChangeLog {
  dependsOn compileJava
}

liquibase {
  activities {
    main {
      changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
      url 'jdbc:h2:./db'
      username ''
      password ''
      referenceUrl 'hibernate:spring:hexlet.code.model' +
                   '?dialect=org.hibernate.dialect.H2Dialect' +
                   '&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
    }
  }
}

task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean

// Сборка фронтенда.
// Выполняется только если ничего не изменилось.
// *****************************************************************************
frontend {
  nodeVersion = '16.13.1'
  installScript = 'install'
  assembleScript = 'run build'
  packageJsonDirectory = file("${projectDir}/frontend")
}

def configFrontendTasks = {
  inputs.files(fileTree("$projectDir/frontend").exclude('build', 'node_modules'))
  outputs.dir("$buildDir/resources/main/static")
}

assembleFrontend {
  configure configFrontendTasks

  doLast {
    copy {
      from "$projectDir/frontend/build"
      into "$buildDir/resources/main/static"
    }
  }
}

installFrontend {
  configure configFrontendTasks
}

processResources.dependsOn assembleFrontend
// *****************************************************************************